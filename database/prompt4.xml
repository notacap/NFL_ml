 <prompt>
  
  <context>

    We need to create a new file in the insert_scripts directory named: tm_def_pass.py

    The script will insert/upsert season total nfl defense stats against the passing game into the tm_def_pass table

    The script should work similarly to the tm_def_vs_qb.py script

  </context>
  <agents>

    Make sure to consult with the csv-source-analyzer agent before modifying the script. The agent ONLY needs to review the files that get ingested into the tm_def_pass.py script.

    After you run the script and the data is inserted/upserted into the database, have the @database-quality-checker agent quality control the database against the source csv files to make sure the data in the mapped columns match 1:1

    When you run the script after creating it, you are running it for the first time. There should NOT be any rows updated when you run the script, there should only be new rows inserted. If you encounter any rows updated, call on the database-insert-validator agent to investigate why. The reason for the update statement should not be fixed, only explained. I will provide instructions for how to prevent the update record after I investiage the agent's findings.

  </agents>

  <source_csv>

    <directory_logic>

      The script only needs to process one file. The name in the file includes tm_def_pass

      The script should process the most recently created file in this directory:
      
      C:\Users\nocap\Desktop\code\NFL_ml\web_scrape\scraped_data\{YEAR}\tm_def_pass\week_{WEEK}

      The YEAR and WEEK variables at the top of the db_utils.py determine the {YEAR} and {WEEK} variables in the source file directory path

      The WEEK_START and WEEK_END variables are not applicable, as those are reserved for game level data

    </directory_logic>

  </source_csv>

  <script_details>

    The script should create the database table if it does not already exist in the database.

    Make sure the script is utilizing the YEAR and WEEK variables from the db_utils.py file (Again, the WEEK_START and WEEK_END variables are not applicable for this script)

      <id_values>

        <season_id>

          - To determine the season_id, the script needs to match the YEAR variable value from the db_utils.py file with the 'year' column value in the nfl_season table

          - The get_season_id function in the db_utils.py file should be used to determine the season_id value

        </season_id>

        <week_id>

          - To determine the week_id, should match the season_id and WEEK variable value (from the db_utils.py file) with the season_id and week_num column in the nfl_week database table

        </week_id>

        <team_id>

          - the get_team_id function in the db_utils.py file should be used to determine the team_id value

          - The source file 'Tm' contains full team names

          - The script should look for a match between the source file 'Tm' column value and the nfl_team table 'team_name' column

          - Use the team_id with the matching team_name

        </team_id>

      </id_values>

  </script_details>

  <create_table>

    CREATE TABLE tm_def_pass (
        tm_def_pass_id INT AUTO_INCREMENT PRIMARY KEY,
        team_id INT,
        season_id INT,
        week_id INT,
        tm_def_pass_cmp INT,
        tm_def_pass_att INT,
        tm_def_pass_cmp_pct DECIMAL(7,4),
        tm_def_pass_yds INT,
        tm_def_pass_td INT,
        tm_def_pass_td_pct DECIMAL(5,4),
        tm_def_int INT,
        tm_def_pass_def INT,
        tm_def_int_pct DECIMAL(5,4),
        tm_def_pass_yds_att DECIMAL(7,4),
        tm_def_pass_yds_att_adj DECIMAL(7,4),
        tm_def_pass_ypc DECIMAL(7,4),
        tm_def_pass_ypg DECIMAL(7,4),
        tm_def_pass_rtg DECIMAL(7,4),
        tm_def_sk INT,
        tm_def_sk_yds INT,
        tm_def_qb_hit INT,
        tm_def_tfl INT,
        tm_def_sk_pct DECIMAL(5,4),
        tm_def_pass_net_yds_att DECIMAL(7,4),
        tm_def_pass_net_yds_att_adj DECIMAL(7,4),
        tm_def_pass_exp DECIMAL(7,4),
        UNIQUE KEY uk_tm_season (team_id, season_id, week_id),
        FOREIGN KEY (week_id) REFERENCES nfl_week(week_id),
        FOREIGN KEY (team_id) REFERENCES nfl_team(team_id),
        FOREIGN KEY (season_id) REFERENCES nfl_season(season_id)
    );

  </create_table>

  <source_csv_example>

    Here is an example source csv file the script needs to process and insert/upsert into the tm_def_pass table

    C:\Users\nocap\Desktop\code\NFL_ml\web_scrape\scraped_data\2024\tm_def_pass\week_18\tm_def_pass_20250813_183155.csv

  </source_csv_example>

  <important_note>

      Do not deviate from the create table statement provided. There are source csv columns I am intentionally omitting from the database.

  </important_note>

</prompt>

