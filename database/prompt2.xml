<prompt>
  
  <context>

    - We need to create a new file in the insert_scripts directory named: tm_rush.py

    - The script will insert/upsert season total nfl team rushing stats into the tm_rush table

    - The script should work similarly to the tm_def.py script

  </context>
  <agents>

    - Make sure to consult with the csv-source-analyzer agent before modifying the script. The agent ONLY needs to review the files that get ingested into the tm_rush.py script.

    - After you run the script and the data is inserted/upserted into the database, have the @database-quality-checker agent quality control the database against the source csv files to make sure the data in the mapped columns match 1:1

    - When you run the script after creating it, you are running it for the first time. There should NOT be any rows updated when you run the script, there should only be new rows inserted. If you encounter any rows updated, call on the database-insert-validator agent to investigate why. The reason for the update statement should not be fixed, only explained. I will provide instructions for how to prevent the update record after I investiage the agent's findings.

  </agents>

  <source_csv>

    <directory_logic>

      - The script needs to process a file set of two files

      - The file names in the file set include: tm_rush and tm_adv_rushing

      - The script should process the most recently created files in the following directories:
      
        C:\Users\nocap\Desktop\code\NFL_ml\web_scrape\scraped_data\{YEAR}\tm_rush\week_{WEEK}
        C:\Users\nocap\Desktop\code\NFL_ml\web_scrape\scraped_data\{YEAR}\tm_adv_rushing\week_{WEEK}


      - The YEAR and WEEK variables at the top of the db_utils.py determine the {YEAR} and {WEEK} variables in the source file directory path

      The WEEK_START and WEEK_END variables are not applicable, as those are reserved for game level data

    </directory_logic>

    <consolidate_logic>

      - The script should consolidate the data from the two source files into a single table

      - The 'Tm' column from both source files contain full team names

      - the full team names can be used to help match the data between the five files

    </consolidate_logic>

  </source_csv>

  <script_details>

    - The script should create the database table if it does not already exist in the database.

    - Make sure the script is utilizing the YEAR and WEEK variables from the db_utils.py file (Again, the WEEK_START and WEEK_END variables are not applicable for this script)

      <id_values>

        <season_id>

          - To determine the season_id, the script needs to match the YEAR variable value from the db_utils.py file with the 'year' column value in the nfl_season table

          - The get_season_id function in the db_utils.py file should be used to determine the season_id value

        </season_id>

        <week_id>

          - To determine the week_id, should match the season_id and WEEK variable value (from the db_utils.py file) with the season_id and week_num column in the nfl_week database table

        </week_id>

        <team_id>

          - the get_team_id function in the db_utils.py file should be used to determine the team_id value

        </team_id>

      </id_values>

  </script_details>

  <create_table>

    CREATE TABLE tm_rush (
        tm_rush_id INT AUTO_INCREMENT PRIMARY KEY,
        team_id INT,
        season_id INT,
        week_id INT,
        tm_rush_att INT,
        tm_rush_yds INT,
        tm_rush_td INT,
        tm_rush_lng INT,
        tm_rush_yds_att DECIMAL(7,4),
        tm_rush_yds_gm DECIMAL(7,4),
        tm_rush_fmbl INT,
        tm_rush_exp DECIMAL(7,4),
        tm_rush_first_dwn INT,
        tm_rush_ybc INT,
        tm_rush_ybc_att DECIMAL(7,4),
        tm_rush_yac INT,
        tm_rush_yac_att DECIMAL(7,4),
        tm_rush_brkn_tkl INT,
        tm_rush_att_brkn_tkl DECIMAL(7,4),
        UNIQUE KEY uk_tm_season (team_id, season_id, week_id),
        FOREIGN KEY (week_id) REFERENCES nfl_week(week_id),
        FOREIGN KEY (team_id) REFERENCES nfl_team(team_id),
        FOREIGN KEY (season_id) REFERENCES nfl_season(season_id)
    );


  </create_table>

  <column_mapping>

    - These database table columns should be mapped from the tm_rush source file - 

        tm_rush_att INT,
        tm_rush_yds INT,
        tm_rush_td INT,
        tm_rush_lng INT,
        tm_rush_yds_att DECIMAL(7,4),
        tm_rush_yds_gm DECIMAL(7,4),
        tm_rush_fmbl INT,
        tm_rush_exp DECIMAL(7,4),


    - These database table columns should be mapped from the tm_adv_rushing source file - 

        tm_rush_first_dwn INT,
        tm_rush_ybc INT,
        tm_rush_ybc_att DECIMAL(7,4),
        tm_rush_yac INT,
        tm_rush_yac_att DECIMAL(7,4),
        tm_rush_brkn_tkl INT,
        tm_rush_att_brkn_tkl DECIMAL(7,4),

  </column_mapping>

  <source_csv_example>

    - Here is an example source csv file set the script needs to process and insert/upsert into the tm_rush table

    C:\Users\nocap\Desktop\code\NFL_ml\web_scrape\scraped_data\2024\tm_rush\week_18\tm_rush_20250903_194529.csv
    C:\Users\nocap\Desktop\code\NFL_ml\web_scrape\scraped_data\2024\tm_adv_rushing\week_18\tm_adv_rushing_20250814_102159.csv

    
  </source_csv_example>

  <important_note>

      - Do not deviate from the create table statement provided. There are source csv columns I am intentionally omitting from the database.

  </important_note>

</prompt>
